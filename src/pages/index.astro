---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import InfiniteScrollingBackground from "../components/InfiniteScrollingBackground.astro";
import { ImageEnum, pictures } from "../types/imagePaths";
import { Image } from "astro:assets";
---

<Layout title="Welcome to Astro.">
  <div class="frame">
    <div class="frame_line" data-line-1></div>
    <div class="frame_line" data-line-2></div>
    <div class="frame_line" data-line-3></div>
    <div class="frame_line" data-line-4></div>
  </div>
  <div id="scrollBg" style={{ overflow: "scroll", height: "100vh" }}>
    <div
      style={{
        // width: "100000px",
        height: "100%",
        display: "flex",
        flexWrap: "nowrap",
        padding: "20vh 22vh",
      }}
    >
      {
        pictures.reverse().map((src) => (
          <div style={{ paddingRight: "20vh", zIndex: 3 }}>
            <Image src={src} class="card" alt="Âì¶Ë±Å" loading={"eager"} />
          </div>
        ))
      }
    </div>
  </div>
  <InfiniteScrollingBackground />
  <div class="loading"></div>
</Layout>

<style>
  .card {
    height: 40vh;
    width: fit-content;
    widows: auto;
    object-fit: contain;
    /* opacity: 0; */
    border: 4px solid black;
    border-radius: 20px;
    display: block;
  }
  #scrollBg::-webkit-scrollbar {
    display: none;
  }
  .frame {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;
    transition-property: opacity;
    transition-duration: 1.2s;
    transition-timing-function: cubic-bezier(0.3, 0.1, 0.1, 1);
    transition-delay: 0.4s;
    opacity: 1;
  }
  .frame_line {
    position: absolute;
    left: 0;
    width: 100%;
    height: 4px;
    background-color: #000;
  }
  .frame_line[data-line-1] {
    top: calc(20% - 2px);
  }
  .frame_line[data-line-2] {
    top: calc(40% - 2px);
  }
  .frame_line[data-line-3] {
    top: calc(60% - 2px);
  }
  .frame_line[data-line-4] {
    top: calc(80% - 2px);
  }
  .gallery_wrap {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }
  .gallery_list {
    height: 100%;
    will-change: transform;
  }
  .loading {
    position: absolute;
    left: 0;
    top: 0;
    background: black;
    height: 100%;
    width: 100%;
    z-index: 4;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 100px;
    color: white;
    opacity: 1;
    transition: opacity 1s ease-in-out; /* 2ÁßíÁöÑÊ∑°Âá∫Âä®Áîª */
  }
  .loading-hidden {
    opacity: 0;
  }
</style>

<script type="module">
  console.log("hello");
  const images = document.querySelectorAll("img");
  const loadDiv = document.querySelector(".loading");
  console.log(images.length);

  let _loadedImagesCount = 0; // ÁßÅÊúâÂèòÈáèÔºå‰∏çÁõ¥Êé•‰øÆÊîπ
  const totalImagesCount = images.length;

  function updateLoadingStatus() {
    loadDiv.textContent = `${_loadedImagesCount}/${totalImagesCount}`;
    if (_loadedImagesCount === totalImagesCount) {
      allImagesLoadedCallback();
    }
  }

  function incrementLoadedImagesCount() {
    _loadedImagesCount++;
    updateLoadingStatus();
  }

  function allImagesLoadedCallback() {
    loadDiv.textContent = `${totalImagesCount}`;
    loadDiv?.animate([], {});
    loadDiv?.classList.add("loading-hidden");
    images.forEach((image) => {
      image.removeEventListener("load",incrementLoadedImagesCount);
    });
    setTimeout(() => {  
      loadDiv.style.display = "none";
    }, 1000);
    // add Transtion Âä®Áîª
    // loadDiv.style.display = "none"; // Â¶ÇÊûú‰Ω†ÊÉ≥ÈöêËóèÂä†ËΩΩÊèêÁ§∫ÔºåÂèñÊ∂àÊ≥®ÈáäËøôË°å‰ª£Á†Å
  }

  // ÂàùÂßãÂåñÂä†ËΩΩÁä∂ÊÄÅ
  updateLoadingStatus();

  images.forEach((img) => {
    if (img.complete) {
      incrementLoadedImagesCount();
      console.log("Image already loaded: ü§¶‚Äç‚ôÇÔ∏è");
    } else {
      img.addEventListener("load", incrementLoadedImagesCount);
      img.addEventListener("error", incrementLoadedImagesCount);
    }
  });
</script>
