---
// Import any required scripts or styles here if necessary
---

<canvas id="demo"></canvas>
<style>
  canvas {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    contain: strict;
    display: block;
  }
</style>
<script>
  // import { InfiniteScrollingBackground } from '../scripts/InfiniteScrollingBackgronud';
  // // 页面加载完成后初始化背景滚动
  // window.addEventListener('load', () => {
  //   new InfiniteScrollingBackground('scrollCanvas', '/favicon.svg');
  // });
  const fruits = [
    "🍇",
    "🍈",
    "🍉",
    "🍊",
    "🍋",
    "🍌",
    "🍍",
    "🥭",
    "🍎",
    "🍏",
    "🍐",
    "🍑",
    "🍒",
    "🍓",
    "🥝",
    "🍅",
    "🥥",
  ];
  const random = Math.floor(Math.random() * fruits.length)

  const vh = window.innerHeight / 100;
  const vw = window.innerWidth / 100;
  const verticalLine = [0, 20 * vh, 40 * vh, 60 * vh, 80 * vh];
  const canvas = document.querySelector("#demo") as HTMLCanvasElement;
  canvas.width = 100 * vw;
  canvas.height = 100 * vh;
  const ctx = canvas.getContext("2d") as CanvasRenderingContext2D;
  function drawOne(item: string, x: number, y: number) {
    ctx.font = "15vh Arial"; // 设置字体大小和类型
    ctx.textBaseline = "top"; // 设置文本基线
    ctx?.fillText(item, x, y);
  }
  function drawAll(x:number, idx:number) {
    for (let i = 0; i < 5; i++) {
      for (let j = 0; j < fruits.length; j++) {
        drawOne(
          fruits[(j + idx + random + i * i * i) % fruits.length],
          22 * j * vh - x,
          4 * vh + verticalLine[i]
        );
      }
    }
  }
  // for (let i = 0; i < 5; i++) {
  //   fruits.forEach((item, idx) =>
  //     drawRect(10 + 22 * idx * vh, 2.5 * vh + verticalLine[i])
  //   );
  // }
  drawAll(0, 0);

  const scrollBg = document.querySelector("#scrollBg") as HTMLDivElement;
  console.log(scrollBg);
  scrollBg.addEventListener("scroll", () => {
    const scrolledPixels = scrollBg.scrollLeft * 0.05;
    let x = (scrolledPixels % 22) * vh;
    const totalLength = fruits.length * 22;
    const count = Math.floor((scrolledPixels % totalLength) / 22);
    ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);
    requestAnimationFrame(() => {
      drawAll(x, count);
    });
  });
</script>
